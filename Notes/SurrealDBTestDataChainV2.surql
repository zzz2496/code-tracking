-------------------------------------------------------------------------------------------------------------------------------------------
create chain:data1_v1_step01 content {
    "name": "data1",
    "process_step": 1,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data1_v2_step01 content {
    "name": "data1",
    "process_step": 1,
    "version":2,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data1_v1_step02 content {
    "name": "data1",
    "process_step": 2,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data1_v2_step02 content {
    "name": "data1",
    "process_step": 2,
    "version":2,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data1_v1_step03 content {
    "name": "data1",
    "process_step": 3,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data1_v2_step03 content {
    "name": "data1",
    "process_step": 3,
    "version":2,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data1_v1_step04 content {
    "name": "data1",
    "process_step": 4,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data1_v1_step05 content {
    "name": "data1",
    "process_step": 5,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data1_v1_step06 content {
    "name": "data1",
    "process_step": 6,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
-------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------
create chain:data2_v1_step01 content {
    "name": "data2",
    "process_step": 1,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data2_v1_step02 content {
    "name": "data2",
    "process_step": 2,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data2_v1_step03 content {
    "name": "data2",
    "process_step": 3,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data2_v1_step04 content {
    "name": "data2",
    "process_step": 4,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data2_v1_step05 content {
    "name": "data2",
    "process_step": 5,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data2_v1_step06 content {
    "name": "data2",
    "process_step": 6,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data2_v1_step07 content {
    "name": "data2",
    "process_step": 7,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data2_v1_step08 content {
    "name": "data2",
    "process_step": 8,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
-------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------
create chain:data3_v1_step01 content {
    "name": "data3",
    "process_step": 1,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data3_v1_step02 content {
    "name": "data3",
    "process_step": 2,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data3_v1_step03 content {
    "name": "data3",
    "process_step": 3,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data3_v1_step04 content {
    "name": "data3",
    "process_step": 4,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data3_v1_step05 content {
    "name": "data3",
    "process_step": 5,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data3_v1_step06 content {
    "name": "data3",
    "process_step": 6,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data3_v1_step07 content {
    "name": "data3",
    "process_step": 7,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data3_v1_step08 content {
    "name": "data3",
    "process_step": 8,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data3_v1_step09 content {
    "name": "data3",
    "process_step": 9,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data3_v1_step10 content {
    "name": "data3",
    "process_step":10,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
-------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------
create chain:data4_v1_step01 content {
    "name": "data4",
    "process_step": 1,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data4_v1_step02 content {
    "name": "data4",
    "process_step": 2,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data4_v1_step03 content {
    "name": "data4",
    "process_step": 3,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data4_v1_step04 content {
    "name": "data4",
    "process_step": 4,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data4_v1_step05 content {
    "name": "data4",
    "process_step": 5,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data4_v1_step06 content {
    "name": "data4",
    "process_step": 6,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data4_v1_step07 content {
    "name": "data4",
    "process_step": 7,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data4_v1_step08 content {
    "name": "data4",
    "process_step": 8,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data4_v1_step09 content {
    "name": "data4",
    "process_step": 9,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data4_v1_step10 content {
    "name": "data4",
    "process_step":10,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data4_v1_step11 content {
    "name": "data4",
    "process_step": 11,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data4_v1_step12 content {
    "name": "data4",
    "process_step": 12,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
-------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------
create chain:data5_v1_step01 content {
    "name": "data5",
    "process_step": 1,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data5_v1_step02 content {
    "name": "data5",
    "process_step": 2,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data5_v1_step03 content {
    "name": "data5",
    "process_step": 3,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data5_v1_step04 content {
    "name": "data5",
    "process_step": 4,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data5_v1_step05 content {
    "name": "data5",
    "process_step": 5,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data5_v1_step06 content {
    "name": "data5",
    "process_step": 6,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data5_v1_step07 content {
    "name": "data5",
    "process_step": 7,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data5_v1_step08 content {
    "name": "data5",
    "process_step": 8,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data5_v1_step09 content {
    "name": "data5",
    "process_step": 9,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data5_v1_step10 content {
    "name": "data5",
    "process_step":10,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data5_v1_step11 content {
    "name": "data5",
    "process_step": 11,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data5_v1_step12 content {
    "name": "data5",
    "process_step": 12,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data5_v1_step13 content {
    "name": "data5",
    "process_step": 13,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
create chain:data5_v1_step14 content {
    "name": "data5",
    "process_step": 14,
    "version":1,
    "time":{
        "written":time::now(),
        "timezone":time::timezone()
    }
};
-------------------------------------------------------------------------------------------------------------------------------------------

DEFINE FUNCTION OVERWRITE fn::connect_nodes_v2(
	$node1:record,
	$node2:record,
	$chain_id:string,
	$link_mode: "version" | "next_process" | "next_function" | "contains",
	$only: "false" | "true"
){
    IF $only == "false" {
		IF $link_mode == "version" {
			return (RELATE $node1 -> version -> $node2 SET time.connected = time::now(), connection_type = 'History', chain_id = $chain_id);
		} ELSE IF $link_mode == "next_process" {
			return (RELATE $node1 -> next_process -> $node2 SET time.connected = time::now(), connection_type = 'Next Process', chain_id = $chain_id);
		} ELSE IF $link_mode == "next_function" {
			return (RELATE $node1 -> next_function -> $node2 SET time.connected = time::now(), connection_type = 'Next Function', chain_id = $chain_id);
		} ELSE IF $link_mode == "contains" {
			return (RELATE $node1 -> is_containing -> $node2 SET time.connected = time::now(), connection_type = 'Is Containing', chain_id = $chain_id);
		};
	} ELSE IF $only == "true" {
		IF $link_mode == "version" {
			return (RELATE ONLY $node1 -> version -> $node2 SET time.connected = time::now(), connection_type = 'History', chain_id = $chain_id);
		} ELSE IF $link_mode == "next_process" {
			return (RELATE ONLY $node1 -> next_process -> $node2 SET time.connected = time::now(), connection_type = 'Next Process', chain_id = $chain_id);
		} ELSE IF $link_mode == "next_function" {
			return (RELATE ONLY $node1 -> next_function -> $node2 SET time.connected = time::now(), connection_type = 'Next Function', chain_id = $chain_id);
		} ELSE IF $link_mode == "contains" {
			return (RELATE ONLY $node1 -> is_containing -> $node2 SET time.connected = time::now(), connection_type = 'Is Containing', chain_id = $chain_id);
		};
	}
};

return fn::connect_nodes_v2(chain:data1_v1_step01, chain:data1_v1_step02, 'chain_data1', 'next_process', 'true');
return fn::connect_nodes_v2(chain:data1_v1_step02, chain:data1_v1_step03, 'chain_data1', 'next_process', 'true');
return fn::connect_nodes_v2(chain:data1_v1_step03, chain:data1_v1_step04, 'chain_data1', 'next_process', 'true');

return fn::connect_nodes_v2(chain:data1_v1_step01, chain:data1_v2_step01, 'version_data1', 'version', 'true');
return fn::connect_nodes_v2(chain:data1_v1_step02, chain:data1_v2_step02, 'version_data1', 'version', 'true');
return fn::connect_nodes_v2(chain:data1_v1_step03, chain:data1_v2_step03, 'version_data1', 'version', 'true');

return fn::connect_nodes_v2(chain:data1_v1_step04, chain:data1_v1_step05, 'chain_data1', 'next_process', 'true');
return fn::connect_nodes_v2(chain:data1_v1_step05, chain:data1_v1_step06, 'chain_data1', 'next_process', 'true');

return fn::connect_nodes_v2(chain:data2_v1_step01, chain:data2_v1_step02, 'chain_data2', 'next_process', 'true');
return fn::connect_nodes_v2(chain:data2_v1_step02, chain:data2_v1_step03, 'chain_data2', 'next_process', 'true');
return fn::connect_nodes_v2(chain:data2_v1_step03, chain:data2_v1_step04, 'chain_data2', 'next_process', 'true');
return fn::connect_nodes_v2(chain:data2_v1_step04, chain:data2_v1_step05, 'chain_data2', 'next_process', 'true');
return fn::connect_nodes_v2(chain:data2_v1_step05, chain:data2_v1_step06, 'chain_data2', 'next_process', 'true');
return fn::connect_nodes_v2(chain:data2_v1_step06, chain:data2_v1_step07, 'chain_data2', 'next_process', 'true');
return fn::connect_nodes_v2(chain:data2_v1_step07, chain:data2_v1_step08, 'chain_data2', 'next_process', 'true');

return fn::connect_nodes_v2(chain:data3_v1_step01, chain:data3_v1_step02, 'chain_data3', 'next_process', 'true');
return fn::connect_nodes_v2(chain:data3_v1_step02, chain:data3_v1_step03, 'chain_data3', 'next_process', 'true');
return fn::connect_nodes_v2(chain:data3_v1_step03, chain:data3_v1_step04, 'chain_data3', 'next_process', 'true');
return fn::connect_nodes_v2(chain:data3_v1_step04, chain:data3_v1_step05, 'chain_data3', 'next_process', 'true');
return fn::connect_nodes_v2(chain:data3_v1_step05, chain:data3_v1_step06, 'chain_data3', 'next_process', 'true');
return fn::connect_nodes_v2(chain:data3_v1_step06, chain:data3_v1_step07, 'chain_data3', 'next_process', 'true');
return fn::connect_nodes_v2(chain:data3_v1_step07, chain:data3_v1_step08, 'chain_data3', 'next_process', 'true');
return fn::connect_nodes_v2(chain:data3_v1_step08, chain:data3_v1_step09, 'chain_data3', 'next_process', 'true');
return fn::connect_nodes_v2(chain:data3_v1_step09, chain:data3_v1_step10, 'chain_data3', 'next_process', 'true');

return fn::connect_nodes_v2(chain:data4_v1_step01, chain:data4_v1_step02, 'chain_data4', 'next_process', 'true');
return fn::connect_nodes_v2(chain:data4_v1_step02, chain:data4_v1_step03, 'chain_data4', 'next_process', 'true');
return fn::connect_nodes_v2(chain:data4_v1_step03, chain:data4_v1_step04, 'chain_data4', 'next_process', 'true');
return fn::connect_nodes_v2(chain:data4_v1_step04, chain:data4_v1_step05, 'chain_data4', 'next_process', 'true');
return fn::connect_nodes_v2(chain:data4_v1_step05, chain:data4_v1_step06, 'chain_data4', 'next_process', 'true');
return fn::connect_nodes_v2(chain:data4_v1_step06, chain:data4_v1_step07, 'chain_data4', 'next_process', 'true');
return fn::connect_nodes_v2(chain:data4_v1_step07, chain:data4_v1_step08, 'chain_data4', 'next_process', 'true');
return fn::connect_nodes_v2(chain:data4_v1_step08, chain:data4_v1_step09, 'chain_data4', 'next_process', 'true');
return fn::connect_nodes_v2(chain:data4_v1_step09, chain:data4_v1_step10, 'chain_data4', 'next_process', 'true');
return fn::connect_nodes_v2(chain:data4_v1_step10, chain:data4_v1_step11, 'chain_data4', 'next_process', 'true');
return fn::connect_nodes_v2(chain:data4_v1_step11, chain:data4_v1_step12, 'chain_data4', 'next_process', 'true');

return fn::connect_nodes_v2(chain:data5_v1_step01, chain:data5_v1_step02, 'chain_data5', 'next_process', 'true');
return fn::connect_nodes_v2(chain:data5_v1_step02, chain:data5_v1_step03, 'chain_data5', 'next_process', 'true');
return fn::connect_nodes_v2(chain:data5_v1_step03, chain:data5_v1_step04, 'chain_data5', 'next_process', 'true');
return fn::connect_nodes_v2(chain:data5_v1_step04, chain:data5_v1_step05, 'chain_data5', 'next_process', 'true');
return fn::connect_nodes_v2(chain:data5_v1_step05, chain:data5_v1_step06, 'chain_data5', 'next_process', 'true');
return fn::connect_nodes_v2(chain:data5_v1_step06, chain:data5_v1_step07, 'chain_data5', 'next_process', 'true');
return fn::connect_nodes_v2(chain:data5_v1_step07, chain:data5_v1_step08, 'chain_data5', 'next_process', 'true');
return fn::connect_nodes_v2(chain:data5_v1_step08, chain:data5_v1_step09, 'chain_data5', 'next_process', 'true');
return fn::connect_nodes_v2(chain:data5_v1_step09, chain:data5_v1_step10, 'chain_data5', 'next_process', 'true');
return fn::connect_nodes_v2(chain:data5_v1_step10, chain:data5_v1_step11, 'chain_data5', 'next_process', 'true');
return fn::connect_nodes_v2(chain:data5_v1_step11, chain:data5_v1_step12, 'chain_data5', 'next_process', 'true');
return fn::connect_nodes_v2(chain:data5_v1_step12, chain:data5_v1_step13, 'chain_data5', 'next_process', 'true');
return fn::connect_nodes_v2(chain:data5_v1_step13, chain:data5_v1_step14, 'chain_data5', 'next_process', 'true');


------------------------------------------------------------------------------------------------------------------------------------------







DEFINE FUNCTION OVERWRITE fn::traverse_v3(
    $el: record, 
    $link_mode: "version" | "next_process" | "next_function" | "contains", 
    $mode: "prev" | "next", 
    $depth: number, 
    $max_depth: number
) {
    IF $link_mode == "version" {
        IF $mode == "next" {
            $parent = (SELECT VALUE (->version->chain)[0] FROM $el LIMIT 1)[0];    
            IF $parent {
                if $depth < $max_depth {
                    RETURN array::prepend(fn::traverse_v3($parent, $link_mode, $mode, $depth+1, $max_depth), $parent.*)
                }ELSE{
                    RETURN[]
                }
            } ELSE {
                RETURN []
            };  
        } ELSE {
            $parent = (SELECT VALUE (<-version<-chain)[0] FROM $el LIMIT 1)[0];
            IF $parent {
                if $depth < $max_depth {
                    RETURN array::prepend(fn::traverse_v3($parent, $link_mode, $mode, $depth+1, $max_depth), $parent.*)
                }ELSE{
                    RETURN[]
                }
            } ELSE {
                RETURN []
            };  
        };
    } ELSE IF $link_mode == "next_process" {
        IF $mode == "next" {
            $parent = (SELECT VALUE (->next_process->chain)[0] FROM $el LIMIT 1)[0];
    
            IF $parent {
                if $depth < $max_depth {
                    RETURN array::prepend(fn::traverse_v3($parent, $link_mode, $mode, $depth+1, $max_depth), $parent.*)            
                }ELSE{
                    RETURN[]
                }
            } ELSE {
                RETURN []
            };  
        } ELSE {
            $parent = (SELECT VALUE (<-next_process<-chain)[0] FROM $el LIMIT 1)[0];
        
            IF $parent {
                if $depth < $max_depth {
                    RETURN array::prepend(fn::traverse_v3($parent, $link_mode, $mode, $depth+1, $max_depth), $parent.*)
                }ELSE{
                    RETURN[]
                }
            } ELSE {
                RETURN []
            };  
        };
    } ELSE IF $link_mode == "next_function" {
        IF $mode == "next" {
            $parent = (SELECT VALUE (->next_function->chain)[0] FROM $el LIMIT 1)[0];
    
            IF $parent {
                if $depth < $max_depth {
                    RETURN array::prepend(fn::traverse_v3($parent, $link_mode, $mode, $depth+1, $max_depth), $parent.*)            
                }ELSE{
                    RETURN[]
                }
            } ELSE {
                RETURN []
            };  
        } ELSE {
            $parent = (SELECT VALUE (<-next_function<-chain)[0] FROM $el LIMIT 1)[0];
        
            IF $parent {
                if $depth < $max_depth {
                    RETURN array::prepend(fn::traverse_v3($parent, $link_mode, $mode, $depth+1, $max_depth), $parent.*)
                }ELSE{
                    RETURN[]
                }
            } ELSE {
                RETURN []
            };  
        };
    } ELSE IF $link_mode == "is_containing" {
        IF $mode == "next" {
            $parent = (SELECT VALUE (->is_containing->chain)[0] FROM $el LIMIT 1)[0];
    
            IF $parent {
                if $depth < $max_depth {
                    RETURN array::prepend(fn::traverse_v3($parent, $link_mode, $mode, $depth+1, $max_depth), $parent.*)            
                }ELSE{
                    RETURN[]
                }
            } ELSE {
                RETURN []
            };  
        } ELSE {
            $parent = (SELECT VALUE (<-is_containing<-chain)[0] FROM $el LIMIT 1)[0];
        
            IF $parent {
                if $depth < $max_depth {
                    RETURN array::prepend(fn::traverse_v3($parent, $link_mode, $mode, $depth+1, $max_depth), $parent.*)
                }ELSE{
                    RETURN[]
                }
            } ELSE {
                RETURN []
            };  
        };
    };
};

select 
    *, 
    (fn::traverse_v3($this.id, "next_process", "prev", 0, 99)) as prev, 
    (fn::traverse_v3($this.id, "next_process", "next", 0, 99)) as next 
from chain
;

select 
    *, 
    (fn::traverse_v3($this.id, "version", "prev", 0, 99)) as prev,
    (fn::traverse_v3($this.id, "version", "next", 0, 99)) as next 
from chain
;

---------------------------------------------------------------------------------------------------------------------

DEFINE FUNCTION OVERWRITE fn::traverse_v4(
    $el: record,
    $parent_fn: function,
    $depth: number,
    $max_depth: number
) {
    IF $depth >= $max_depth {
        RETURN [];
    };

    LET $parent = $parent_fn($el)[0][0];

    IF $parent {
        RETURN array::prepend(
            fn::traverse_v4($parent, $parent_fn, $depth + 1, $max_depth),
            $parent
        );
    } ELSE {
        RETURN [];
    };
};

--return fn::traverse_v4(chain:data1_v1_step03, |$el| SELECT VALUE (->version->chain) FROM $el LIMIT 1, 0, 3);


-- select 
--     *, 
--     (fn::traverse_v4($this.id, |$el| SELECT VALUE (<-next_process<-chain) FROM $el LIMIT 1, 0, 99)).{id, name, process_step} as prev, 
--     (fn::traverse_v4($this.id, |$el| SELECT VALUE (->next_process->chain) FROM $el LIMIT 1, 0, 99)).{id, name, process_step} as next 
-- from chain
-- limit 10
-- ;

define table test schemaless;
define table edge schemaless;

define index DocumentTypeIndex on table test columns Properties.PID, Properties.Chain.ID, Properties.Chain.Segment, Properties.Chain.SegmentOrder UNIQUE;
define field overwrite timestamp on table test readonly value time::now();

define index EdgeIndex on table edge columns in, out UNIQUE;
define field overwrite timestamp on table edge readonly value time::now();
